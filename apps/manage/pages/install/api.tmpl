var cors = require('koa-cors');
var session = require('koa-generic-session');
var redisStore = require('koa-redis');

module.exports = function(app) {

  app.keys = ['{{secret_key}}'];
  app.jwt_secret = 'jwt_secret_{{secret_key}}';

  app.Errors = {
    //通用错误
    'UNKNOWN': {
      code: 1000,
      message: '未知错误'
    },
    'MISSING_PARAMS': {
      code: 1001,
      message: '缺少参数'
    },
    'NOT_LOGIN': {
      code: 1002,
      message: '未登录'
    },
    'NOT_ALLOWED': {
      code: 1003,
      message: '没有权限'
    },
    //sign
    'SIGN_INVALID_CAPTCHA': {
      code: 2000,
      message: '验证码错误'
    },
    'SIGN_REG_FAILED': {
      code: 2001,
      message: '用户注册失败'
    },
    'SIGN_LOGIN_FAILED': {
      code: 2002,
      message: '登录失败'
    },
    'SIGN_MISSING_PHONE': {
      code: 2003,
      message: '缺少手机号'
    },
    'SIGN_PHONE_DUPLICATE': {
      code: 2004,
      message: '手机号重复'
    },
    'SIGN_PHONE_NOT_EXIST': {
      code: 2005,
      message: '手机号不存在'
    },
    'SIGN_SEND_SMS_FAILED': {
      code: 2006,
      message: '验证码发送失败'
    },
    //user
    'USER_INCORRECT_PASSWORD': {
      code: 3000,
      message: '密码不正确'
    },
    'USER_NOT_EXIST': {
      code: 3000,
      message: '用户不存在'
    },
    //data
    'DATA_INSERT_ERROR': {
      code: 4000,
      message: '插入数据库失败'
    },
    'DATA_READ_ERROR': {
      code: 4001,
      message: '读取数据库失败'
    },
    //resource
    'UPLOAD_FAILED': {
      code: 5000,
      message: '资源上传失败'
    }
  };

  var config = {
    port: '{{api_port}}',
    mongo: {
      host: '{{mongo_host}}',
      port: {{mongo_port}},
      replset: '{{mongo_replset}}',
      defaultDB: '{{mongo_db}}'
    },
    redis: {
      host: '{{redis_host}}',
      port: {{redis_port}}
    },
    upload:{
      host:'{{upload_host}}',
      path:'{{upload_path}}',
      db:'{{upload_db}}',
      collection:'{{upload_collection}}'
    },
    privilege: {
      db: '{{privilege_db}}',
      collection: '{{privilege_collection}}'
    },
    schema: {
      db: '{{schema_db}}',
      collection: '{{schema_collection}}'
    },
    control: {
      db: '{{control_db}}',
      collection: '{{control_collection}}'
    },
    user: {
      db: '{{user_db}}',
      collection: '{{user_collection}}'
    },
    usergroup: {
      db: '{{usergroup_db}}',
      collection: '{{usergroup_collection}}'
    },
    uid: {
      db: '{{uid_db}}',
      collection: '{{uid_collection}}'
    },
    middlewares: [session({
      store: redisStore(),
      cookie: {
        domain: global.DOMAIN,
        path: '/',
        maxage: 1000 * 60 * 60 * 24 * 30
      }
    }), cors()]
  }

  return config;
};